@font-face {
  font-family: 'Roboto';
  font-weight: normal;
  font-style: normal;
  src: url('../../fonts/Roboto-Regular.woff2');
}
@font-face {
  font-family: 'Roboto';
  font-weight: 500;
  font-style: normal;
  src: url('../../fonts/Roboto-Medium.woff2');
}
@font-face {
  font-family: 'Roboto';
  font-weight: bold;
  font-style: normal;
  src: url('../../fonts/Roboto-Bold.woff2');
}
@font-face {
  font-family: 'RobotoMono';
  font-weight: normal;
  font-style: normal;
  src: url('../../fonts/RobotoMono-Regular.ttf');
}
@font-face {
  font-family: 'RobotoMono';
  font-weight: bold;
  font-style: normal;
  src: url('../../fonts/RobotoMono-Bold.ttf');
}
@font-face {
  font-family: 'RobotoMono';
  font-weight: normal;
  font-style: italic;
  src: url('../../fonts/RobotoMono-Italic.ttf');
}

/* To get root window height */
html,body {
    height: 100%;
    margin: 0px;
}

body {
    background-color: $bg1_color;
    color: $font_color;
    font-family: Roboto, arial, sans-serif;
    font-size: 14px;
}

//// While creating a component has no size/position
//.NoDisplay {
//    display: none;
//}

.UIComponent {
    position: absolute;
    border: 0px solid $separator_color;
    border-radius: 6px;
    transition: 
        top $transition_duration, 
        left $transition_duration, 
        width $transition_duration, 
        height $transition_duration, 
        transform $transition_duration,
        opacity $transition_duration,
        background-color $transition_duration,
        color $transition_duration,
        filter $transition_duration;
    box-sizing: border-box;
    
    // background image (Component.bgImage)
    background-position: center;
    background-repeat: no-repeat;
    background-size: 100%;
}
.UIComponent:disabled {
    color: darken($font_color, 35%);
}

.UIComposite {
    font-family: Roboto, arial, sans-serif;
    font-size: 14px;
    color: $font_color;
    
    // @extend .Bordered;
    ::-webkit-scrollbar { 
         display: none;         /* Chrome Safari */
    }
    scrollbar-width: none;      /* Firefox */
    -ms-overflow-style: none;   /* IE 10+ */
    overflow-y: visible;
    overflow-x: visible;
}

.ScrollableComposite {
    // @extend .Bordered;
    ::-webkit-scrollbar { 
         display: none;         /* Chrome Safari */
    }
    overflow-y: scroll;
    overflow-x: visible;
}

.Separator {
    border-top: 1px solid $separator_color;
    border-bottom: none;
    overflow: visible;    
}

a, .Link {
    color: $link_color;
    text-decoration: none;
}
a:hover, .Link:hover {
    color: lighten($link_color, 10%);
    text-decoration: underline;
}
a:active, .Link:active {
    margin-top: 1px;
    color: lighten($link_color, 15%);
}

.ColorPicker {
    background-color: inherit;
}

.ListCell {
    background-color: $accent_color;
}

.Bordered {
    border: 1px solid $separator_color;
    border-radius: 6px;
    // margin: -1px;
}

.Progress {
    color: $progress_color; // IE    
    background: rgba(255,255,255,0.05);    
    border-radius: 4px;
}
.Progress::-moz-progress-bar {
    background: $progress_color;        
}
.Progress::-webkit-progress-value {
    background: $progress_color;
    border-radius: 4px;
}
.Progress::-webkit-progress-bar {
    background: rgba(255,255,255,0.05);
    border-radius: 4px;
}
//.Progress[value] {
//    border-radius: 4px;    
//}

.RootWindow {
    position: relative;
    background-color: $bg1_color;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.VisualClickFeedbackStart {
    position: absolute;
    width: 20px;
    height: 20px;
    background-color: $font_color;
    border-radius: 40px;
    opacity: 50%; 
}

.VisualClickFeedbackEnd {
    @extend .VisualClickFeedbackStart;
    transform: scale(5);
    transition: all 0.4s;
    opacity: 0%; 
}
